{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/metronome/services/metronome.worker.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/metronome/components/metronome.component.ts","./src/app/metronome/components/metronome.component.html","./src/app/metronome/metronome-routing.module.ts","./src/app/metronome/metronome.module.ts","./src/app/metronome/models/metronome-player.ts","./src/app/metronome/models/player-state-enum.ts","./src/app/metronome/services/metronome-audio.service.ts","./src/app/metronome/services/time-sync.service.ts","./src/app/tuner/components/tuner.component.ts","./src/app/tuner/components/tuner.component.html","./src/app/tuner/tuner-routing.module.ts","./src/app/tuner/tuner.module.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,iBAAiB,qBAAuB,uB;;;;;;;;;;;;ACAxC;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,oJAAsC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,EAAE;IAC9G,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,oIAA8B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE;IAC9F,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,oLAA8B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE;CAC/F,CAAC;AAKK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;ICCtC,0EAI6B;IAAA,uDAC7B;IAAA,4DAAI;;;;IAHA,oFAAwB;IAEC,0DAC7B;IAD6B,yFAC7B;;ADEG,MAAM,YAAY;IAKvB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAHlC,UAAK,GAAG,cAAc,CAAC;QAEvB,oBAAe,GAAG,CAAC,CAAC,CAAC;QAEnB,IAAI,CAAC,QAAQ,GAAG;YACd;gBACE,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,CAAC;aACT,EAAE;gBACD,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,CAAC;aACT,EAAE;gBACD,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,CAAC;aACT;SACF,CAAC;IACJ,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QAChH,CAAC,CAAC,CAAC;IACL,CAAC;;wEA1BU,YAAY;4FAAZ,YAAY;QCRzB,yEACI;QAAA,oGAI6B;QAEjC,4DAAM;QAEN,2EAA+B;;QAPvB,0DAA6B;QAA7B,iFAA6B;;6FDMxB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACsC;AACxB;AAGvD,oBAAoB;AAC2B;AAE/C,iBAAiB;AACuC;AACO;AACZ;;;AAoB5C,MAAM,SAAS;IACpB,YAAY,YAA6B;QACvC,YAAY,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,CAAC;IAC9D,CAAC;;wFAHU,SAAS,cAHR,2DAAY;4IAGb,SAAS,iJAJT,EAAE,YATJ;YACP,uEAAa;YACb,oEAAgB;YAChB,2EAAe;YACf,+DAAW;YACX,4FAAuB;YACvB,oEAAa;SACd;mIAMU,SAAS,mBAflB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,2EAAe;QACf,+DAAW;QACX,4FAAuB;QACvB,oEAAa;6FAOJ,SAAS;cAjBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,2EAAe;oBACf,+DAAW;oBACX,4FAAuB;oBACvB,oEAAa;iBACd;gBACD,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAE1B;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACnB;AACY;AAMkB;AACJ;;;;;;;;AAQlD,MAAM,kBAAkB;IAM7B,YACU,eAA+B,EAChC,cAAoC;QADnC,oBAAe,GAAf,eAAe,CAAgB;QAChC,mBAAc,GAAd,cAAc,CAAsB;QAP7C,YAAY;QACJ,kBAAa,GAAG,IAAI,4CAAO,EAAE,CAAC;QACtC,gBAAW,GAAmB,IAAI,wEAAe,EAAE,CAAC;QACpD,gBAAW,GAAU,CAAC,CAAC;IAKpB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpI,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC;IAChJ,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAC;YAChC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE;YAC1B,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,qEAAW,CAAC,MAAM,CAAC;SAC7C;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;IAChC,CAAC;IAED,gBAAgB,CAAC,IAAa;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;QAC/D,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,qEAAW,CAAC,MAAM,EAAC;YAC/C,OAAO;SACR;QACD,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ;QAC5B,IAAI,cAAc,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC3C,OAAO,cAAc,GAAG,CAAC,EAAC;YACxB,QAAQ,IAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YAChC,cAAc,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;SACxC;QAED,UAAU,CAAC,GAAE,EAAE;YACb,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAC;gBACjC,IAAI,CAAC,QAAQ,EAAE;aAChB;QACH,CAAC,EAAE,cAAc,CAAC,CAAC;IACrB,CAAC;IAED,wBAAwB;IACxB,QAAQ;QACN,mDAAmD;QACnD,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAC;YAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE;YAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE;YAC1B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC;SACpC;QAED,gCAAgC;QAChC,IAAG,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAC;YAChC,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;YACvC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,qEAAW,CAAC,OAAO,CAAC;SAC9C;aAAK;YACJ,IAAI,CAAC,QAAQ,EAAE,EAAC,qBAAqB;SACtC;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE;QAC1B,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAC;YAChC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,qEAAW,CAAC,OAAO,CAAC;SAC9C;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,qEAAW,CAAC,MAAM,CAAC;SAC7C;IACH,CAAC;IAED,IAAI;QACF,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACrC,CAAC;IAED,SAAS;QACP,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QACxB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAC9D,CAAC;IAED,gBAAgB;QACd,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;IACzC,CAAC;;oFAtFU,kBAAkB;kGAAlB,kBAAkB;QCjB/B,yEACI;QACA,yEACI;QAAA,yEACJ;QADwD,uIAAS,UAAM,IAAE;QAArE,4DACJ;QAAA,4DAAM;QAGN,yEACI;QAAA,qEAA8B;QAC9B,0EAAwB;QAAA,uDAAsB;QAAA,4DAAO;QAAC,2EAC1D;QAAA,4DAAM;QAGN,yEACI;QAAA,uEAAsB;QAAA,wDAA4B;QAAA,4DAAI;QAC1D,4DAAM;QAGN,0EACI;QADe,wIAAS,sBAAkB,IAAE;QAC5C,qEAAuG;QACvG,sEAAuG;QACvG,sEAAuG;QACvG,sEAAuG;QAC3G,4DAAM;QAGN,2EACI;QAAA,6EACA;QADuG,+LAAgD;QAAvJ,4DACA;QAAA,iEACA;QAAA,8EAAuI;QAAvB,2IAAS,eAAW,IAAE;QAAC,sEAAU;QAAA,4DAAS;QAC9J,4DAAM;QAGN,2EACI;QACA,8EACI;QAD6C,2LAAuD,CAAC,IAAC;QACtG,gFAAwC;QAAA,kEAAM;QAAA,4DAAW;QAC7D,4DAAS;QAET,8EACI;QADY,2IAAS,cAAU,IAAE;QACjC,gFAAwC;QAAA,wDAAmD;QAAA,4DAAW;QAC1G,4DAAS;QACT,8EACI;QAD6C,2LAAuD,CAAC,GAAC,CAAC,IAAC;QACxG,gFAAyC;QAAA,+DAAG;QAAA,4DAAW;QAC3D,4DAAS;QACb,4DAAM;QAEV,4DAAM;;QAtC0B,0DAAsB;QAAtB,gFAAsB;QAKxB,0DAA4B;QAA5B,sFAA4B;QAKlB,0DAAgE;QAAhE,iLAAgE;QAChE,0DAAgE;QAAhE,kLAAgE;QAChE,0DAAgE;QAAhE,kLAAgE;QAChE,0DAAgE;QAAhE,kLAAgE;QAK1B,0DAAgC;QAAhC,wFAAgC;QAE9F,0DAAgE;QAAhE,uHAAgE;QAW5B,0DAAmD;QAAnD,oHAAmD;;6FDvB1F,kBAAkB;cAN9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEe;;;AAEtE,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kFAAkB,EAAE,CAAC,CAAC;AAM9D,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAHxB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,sBAAsB,uFAFvB,4DAAY;6FAEX,sBAAsB;cAJlC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACY;AACJ;AAEvD,qBAAqB;AAC0C;AACJ;AAE3D,oBAAoB;AACgD;AACE;;;;AAEtE,MAAM,YAAY,GAAmB,EAAE,GAAG,EAAE,uCAAuC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;AAa5F,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,kBATjB;YACP,4DAAY;YACZ,gFAAsB;YACtB,4DAAc,CAAC,OAAO,CAAC,YAAY,CAAC;YACpC,wEAAkB,CAAC,OAAO,CAAC,UAAU,CAAC;YACtC,wEAAe;YACf,oEAAa;SACd;mIAEU,eAAe,mBAVX,kFAAkB,aAE/B,4DAAY;QACZ,gFAAsB,0IAGtB,wEAAe;QACf,oEAAa;6FAGJ,eAAe;cAX3B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,kFAAkB,CAAC;gBAClC,OAAO,EAAE;oBACP,4DAAY;oBACZ,gFAAsB;oBACtB,4DAAc,CAAC,OAAO,CAAC,YAAY,CAAC;oBACpC,wEAAkB,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtC,wEAAe;oBACf,oEAAa;iBACd;aACF;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAiD;AAE1C,MAAM,eAAe;IAA5B;QACI,UAAK,GAAU,GAAG,CAAC;QACnB,SAAI,GAAU,KAAK,GAAC,IAAI,CAAC,KAAK,CAAC;QAE/B,cAAS,GAAW,IAAI,CAAC;QACzB,UAAK,GAAe,8DAAW,CAAC,MAAM,CAAC;IAC3C,CAAC;CAAA;;;;;;;;;;;;;ACRD;AAAA;AAAA,IAAY,WAIX;AAJD,WAAY,WAAW;IACnB,mDAAO;IACP,mDAAO;IACP,iDAAM;AACV,CAAC,EAJW,WAAW,KAAX,WAAW,QAItB;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAmD;;;AAO5C,MAAM,qBAAqB;IAEhC,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAE9C,aAAQ,GAAW,KAAK,CAAC;QACzB,cAAS,GAAW,KAAK,CAAC;QAG1B,UAAK,GAAU,KAAK,CAAC,CAAU,8BAA8B;QAC7D,cAAS,GAAU,IAAI,CAAC,CAAO,6CAA6C;QAC5E,mBAAc,GAAU,KAAK,CAAC;QAC9B,sBAAiB,GAAU,GAAG,CAAC,wFAAuF;QACtH,iBAAY,GAAU,GAAG,CAAC,CAAK,6BAA6B;QAC5D,mBAAc,GAAU,CAAC,CAAC,CAAK,yCAAyC;QACxE,eAAU,GAAU,IAAI,CAAC,CAAM,gCAAgC;QAC/D,iBAAY,GAAG,EAAE,CAAC,CAAa,oGAAoG;QAEnI,kBAAa,GAAU,CAAC,CAAC,CAAC;IAfuB,CAAC;IAiBlD,WAAW,CAAC,KAAY;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,QAAQ;QACJ,kDAAkD;QAClD,IAAI,cAAc,GAAU,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAI,mCAAmC;QAC/C,wCAAwC;QAC9E,IAAI,CAAC,YAAY,IAAI,IAAI,GAAG,cAAc,CAAC,CAAI,oCAAoC;QAEnF,IAAI,CAAC,eAAe,EAAE,CAAC,CAAI,wCAAwC;QACnE,IAAI,IAAI,CAAC,eAAe,IAAI,EAAE,EAAE;YAC5B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;SAC5B;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC;IAClD,CAAC;IAED,kBAAkB;QAChB,IAAG,IAAI,CAAC,eAAe,GAAC,CAAC,IAAI,CAAC,EAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,GAAC,CAAC,CAAC;SAC/C;IACH,CAAC;IAED,YAAY,CAAC,UAAU,EAAE,IAAI;QACzB,yDAAyD;QACzD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,CAAE,CAAC;QAE3D,IAAK,CAAC,IAAI,CAAC,cAAc,IAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAC,CAAC,CAAC;YAC3C,OAAO,CAAC,uCAAuC;QACnD,IAAK,CAAC,IAAI,CAAC,cAAc,IAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAC,CAAC,CAAC;YAC3C,OAAO,CAAC,0CAA0C;QAEtD,uBAAuB;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;QAC/C,GAAG,CAAC,OAAO,CAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAE,CAAC;QAC7C,wDAAwD;QACxD,mCAAmC;QACnC,IAAI,UAAU,GAAG,CAAC,KAAK,CAAC,EAAM,+BAA+B;YACzD,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc;aACjB,+BAA+B;YACvD,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,GAAC,CAAC,CAAC;QAChD,GAAG,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;QAClB,GAAG,CAAC,IAAI,CAAE,IAAI,GAAG,IAAI,CAAC,UAAU,CAAE,CAAC;QACnC,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED,SAAS;QACL,yEAAyE;QACzE,yCAAyC;QACzC,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAG;YAChF,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAE,CAAC;YAC7D,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;IACL,CAAC;IAED,IAAI;QACF,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,yCAAyC;YACzC,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;YACzD,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;YAClD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;QAED,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QAEjC,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE,gBAAgB;YAClC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YAClD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACtC,OAAO,KAAK,CAAC;SAChB;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC;SACf;IACH,CAAC;IAED,IAAI;QACF,iEAAiE;QACjE,8EAA8E;QAC9E,uEAAuE;QACvE,0DAA0D;QAC1D,yEAAyE;QAEzE,IAAI,CAAC,WAAW,GAAG,IAAI,MAAM,CAAC,oBAAuB,EAAE,SAAkB,CAAC,CAAC;QAC3E,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;YACxC,IAAI,IAAI,IAAI,MAAM,EAAE;gBAClB,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB;iBACG;gBACF,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC;aACjC;QACH,CAAC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAC,UAAU,EAAC,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC;IAC5D,CAAC;;0FArHU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAHpB,MAAM;6FAGP,qBAAqB;cAJjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAA2C;;;AASpC,MAAM,eAAe;IAC1B,YAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAEtC,mDAAmD;IACnD,iBAAiB;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;IAC/C,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;IAC9C,CAAC;IAED,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACtC,CAAC;IAED,eAAe,CAAC,QAAe;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAC,KAAK,EAAC,QAAQ,EAAC,CAAC,CAAC;IACxD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;;8EAtBU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAHd,MAAM;6FAGP,eAAe;cAJ3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEX;;;;;;ICDrC,4EAAmF;IAA3E,6TAA6B;IAA8C,4EAAgB;IAAA,4DAAS;;;;IAC5G,4EAA4E;IAApE,yTAAyB;IAA2C,2EAAe;IAAA,4DAAS;;;IACpG,2EACA;IAAA,uEACA;IAAA,4DAAQ;;;IADA,0DAAyB;IAAzB,6JAAyB;;ADO5B,MAAM,cAAc;IASzB,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAR9C,UAAK,GAAG,aAAa,CAAC;QAGtB,4CAA4C;QAC5C,cAAS,GAAG,KAAK,CAAC;IAI+B,CAAC;IAElD,QAAQ,CAAC,OAAe;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;IAC3D,CAAC;IACD;;MAEE;IACF,iBAAiB;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,gBAAgB,GAAG;YACvB,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,IAAI;SACV,CAAC;QACF,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7H,CAAC;IACD;;MAEE;IACF,eAAe,CAAC,MAAM;QACpB,IAAI,OAAO,GAAG;YACd,QAAQ,EAAE,WAAW;YACrB,qBAAqB,EAAE,CAAC;YACxB,UAAU,EAAE,KAAK;SAChB,CAAC;QACF,yBAAyB;QACzB,IAAI,mBAAmB,GAAG,6DAA6B,CAAC;QACxD,IAAI,CAAC,MAAM,GAAG,IAAI,mBAAmB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACvD,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;IACvB,CAAC;IACD;;MAEE;IACF,aAAa;QACb,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACnD,CAAC;IACD;;;MAGE;IACF,gBAAgB,CAAC,IAAI;QACnB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IACD;;MAEE;IACF,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,KAAK,GAAG,oCAAoC,CAAC;IACpD,CAAC;IACD,QAAQ;IAER,CAAC;;4EA/DU,cAAc;8FAAd,cAAc;QCX3B,sEACE;QAAA,gHAAmF;QACnF,gHAA4E;QAC5E,8GACA;QAEF,4DAAM;;QAL0D,0DAAkB;QAAlB,gFAAkB;QACvB,0DAAiB;QAAjB,+EAAiB;QACvD,0DAAe;QAAf,6EAAe;;6FDQvB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEO;;;AAE9D,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0EAAc,EAAE,CAAC,CAAC;AAM1D,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;6FAEX,kBAAkB;cAJ9B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEa;AACE;;AAUvD,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBALb;YACP,4DAAY;YACZ,wEAAkB;SACnB;mIAEU,WAAW,mBANP,0EAAc,aAE3B,4DAAY;QACZ,wEAAkB;6FAGT,WAAW;cAPvB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,0EAAc,CAAC;gBAC9B,OAAO,EAAE;oBACP,4DAAY;oBACZ,wEAAkB;iBACnB;aACF;;;;;;;;;;;;;;ACbD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXpC,e","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = __webpack_public_path__ + \"0-es2015.worker.js\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'metronome', loadChildren: () => import('./metronome/metronome.module').then(m => m.MetronomeModule) },\n  { path: 'tuner', loadChildren: () => import('./tuner/tuner.module').then(m => m.TunerModule) },\n  { path: 'drone', loadChildren: () => import('./drone/drone.module').then(m => m.DroneModule) },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { } ","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n  title = 'practice-app';\n  navLinks: any[];\n  activeLinkIndex = -1; \n  constructor(private router: Router) {\n    this.navLinks = [\n      {\n        label: 'Metronome',\n        link: '/metronome',\n        index: 0\n      }, {\n        label: 'Drone',\n        link: '/drone',\n        index: 1\n      }, {\n        label: 'Tuner',\n        link: '/tuner',\n        index: 2\n      }, \n    ];\n  }\n  ngOnInit(): void {\n    this.router.events.subscribe((res) => {\n        this.activeLinkIndex = this.navLinks.indexOf(this.navLinks.find(tab => tab.link === '.' + this.router.url));\n    });\n  }\n}\n","<nav mat-tab-nav-bar>\n    <a mat-tab-link\n        *ngFor=\"let link of navLinks\"\n        [routerLink]=\"link.link\"\n        routerLinkActive #rla=\"routerLinkActive\"\n        [active]=\"rla.isActive\"> {{ link.label }}\n    </a>\n</nav>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconRegistry } from '@angular/material/icon';\n\n// Custom components\nimport { AppComponent } from './app.component';\n\n// Custom modules\nimport { AppRoutingModule } from './app-routing.module';\nimport { MetronomeModule } from './metronome/metronome.module';\nimport { TunerModule } from './tuner/tuner.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MetronomeModule,\n    TunerModule,\n    BrowserAnimationsModule,\n    MatTabsModule\n  ],\n  exports: [],\n  providers: [],\n  bootstrap: [AppComponent],\n  \n})\nexport class AppModule {\n  constructor(iconRegistry: MatIconRegistry) {\n    iconRegistry.setDefaultFontSetClass('material-icons-round');\n  }\n }\n","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n// Custom imports\nimport { TimeSyncService } from '../services/time-sync.service'\nimport { NextBeat } from '../models/next-beat'\nimport { MetronomeAudioService } from '../services/metronome-audio.service';\nimport { MetronomePlayer } from '../models/metronome-player';\nimport { PlayerState } from '../models/player-state-enum'\n\n@Component({\n  selector: 'app-metronome',\n  templateUrl: './metronome.component.html',\n  styleUrls: ['./metronome.component.scss']\n})\n\nexport class MetronomeComponent implements OnInit {\n  // Variables\n  private ngUnsubscribe = new Subject();\n  playerState:MetronomePlayer = new MetronomePlayer();\n  clientCount:number = 1;\n\n  constructor(\n    private timeSyncService:TimeSyncService,\n    public metronomeAudio:MetronomeAudioService\n  ) {}\n\n  ngOnInit(): void {\n    this.metronomeAudio.init();\n    this.timeSyncService.subscribeNextBeat().pipe(takeUntil(this.ngUnsubscribe)).subscribe(nextBeat => this.nextBeatReceived(nextBeat));\n    this.timeSyncService.subscribeClientCount().pipe(takeUntil(this.ngUnsubscribe)).subscribe(clientCount => this.clientCount = clientCount.count)\n  }\n\n  ngOnDestroy() {\n    if (this.metronomeAudio.isPlaying){\n      this.metronomeAudio.play()\n      this.playerState.state = PlayerState.Paused;\n    }\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  nextBeatReceived(data:NextBeat){\n    console.log(data)\n    this.playerState.tempo = this.metronomeAudio.tempo = data.tempo\n    if (this.playerState.state == PlayerState.Paused){\n      return;\n    }\n    var nextBeat = data.nextBeat\n    var timeDifference = nextBeat - Date.now();\n    while (timeDifference < 1){\n      nextBeat+=this.playerState.rate;\n      timeDifference = nextBeat - Date.now();\n    }\n\n    setTimeout(()=>{\n      this.metronomeAudio.play();\n      if (!this.metronomeAudio.isPlaying){\n        this.playBeat()\n      }\n    }, timeDifference);\n  }\n\n  // Media client handlers\n  emitPlay(){\n    // Activate playing onclick, necessary for browsers\n    if (this.playerState.firstPlay){\n      this.metronomeAudio.play()\n      this.metronomeAudio.play()\n      this.playerState.firstPlay = false;\n    }\n\n    // Request next beat from server\n    if(!this.metronomeAudio.isPlaying){\n      this.timeSyncService.requestNextBeat();\n      this.playerState.state = PlayerState.Waiting;\n    } else{\n      this.playBeat() // Toggle play button\n    }\n  }\n\n  playBeat(){\n    this.metronomeAudio.play()\n    if (this.metronomeAudio.isPlaying){\n      this.playerState.state = PlayerState.Playing;\n    } else {\n      this.playerState.state = PlayerState.Paused;\n    }\n  }\n\n  sync(){\n    this.timeSyncService.syncDevices();\n  }\n\n  sendTempo(){\n    console.log(\"sendTempo\")\n    this.timeSyncService.requestNewTempo(this.playerState.tempo)\n  }\n\n  toggleResolution(){\n    console.log(\"toggle resolution\")\n    this.metronomeAudio.toggleResolution();\n  }\n\n}\n","<div id=\"screen\">\n    <!-- Sync button -->\n    <div id=\"sync\">\n        <img id=\"sync-button\" src=\"/assets/images/sync.png\" (click)=\"sync();\" type=\"button\"/>\n    </div>\n\n    <!-- Active client count -->\n    <div id=\"clients\">\n        <span id=\"online-icon\"></span>\n        <span id=\"client-count\">{{ this.clientCount }}</span> PLAYERS ONLINE\n    </div>\n\n    <!-- Display BPM -->\n    <div id=\"display-box\">\n        <p id=\"tempo-display\">{{ this.playerState.tempo }}</p>\n    </div>\n\n    <!-- Blink on beat -->\n    <div id=\"blinkers\" (click)=\"toggleResolution();\">\n        <div id=\"blink-0\" class=\"blink\" [ngClass]=\"{'makeBlink':this.metronomeAudio.notePartition == 0}\"></div>\n        <div id=\"blink-1\" class=\"blink\" [ngClass]=\"{'makeBlink':this.metronomeAudio.notePartition == 1}\"></div>\n        <div id=\"blink-2\" class=\"blink\" [ngClass]=\"{'makeBlink':this.metronomeAudio.notePartition == 2}\"></div>\n        <div id=\"blink-3\" class=\"blink\" [ngClass]=\"{'makeBlink':this.metronomeAudio.notePartition == 3}\"></div>\n    </div>\n\n     <!-- Tempo -->\n    <div id=\"tempo-box\">\n        <input id=\"tempo-scroll\" type=\"range\" min=\"35.0\" max=\"270.0\" step=\"1\" [value]=\"this.playerState.tempo\" (input)=\"playerState.tempo=$event.target.value;\">\n        <br/>\n        <button [disabled]=\"this.playerState.tempo == this.metronomeAudio.tempo\" id=\"tempo-update-button\" type=\"button\" (click)=\"sendTempo();\">Update BPM</button>\n    </div>\n\n    <!-- Media buttons -->\n    <div id=\"media-buttons\">\n        <!-- <img id=\"tempo-change-button\" src=\"/assets/images/minus.png\" (click)=\"this.playerState.tempo=this.playerState.tempo-1\" type=\"button\"/> -->\n        <button mat-icon-button id=\"tempo-change-button\" (click)=\"this.playerState.tempo=this.playerState.tempo-1\" aria-label=\"Decrease tempo\">\n            <mat-icon id=\"tempo-icon\" inline=\"true\">remove</mat-icon>\n        </button>\n        <!-- <img id=\"play-button\" [src]=\"playerState.state == 2 ? '/assets/images/play.png' : '/assets/images/pause.png'\" (click)=\"emitPlay();\" type=\"button\"/> -->\n        <button mat-fab (click)=\"emitPlay();\" id=\"play-button\" aria-label=\"Play metronome\">\n            <mat-icon id=\"play-icon\" inline=\"true\" >{{playerState.state == 2 ? \"play_arrow\" : \"pause\"}}</mat-icon>\n        </button>\n        <button mat-icon-button id=\"tempo-change-button\" (click)=\"this.playerState.tempo=this.playerState.tempo-1+2\" aria-label=\"Increase tempo\">\n            <mat-icon id=\"tempo-icon\" inline=\"true\" >add</mat-icon>\n        </button>\n    </div>\n\n</div> \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MetronomeComponent } from './components/metronome.component';\n\nconst routes: Routes = [{ path: '', component: MetronomeComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MetronomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n// External libraries\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { AudioContextModule } from 'angular-audio-context';\n\n// Custom components\nimport { MetronomeRoutingModule } from './metronome-routing.module';\nimport { MetronomeComponent } from './components/metronome.component';\n\nconst socketConfig: SocketIoConfig = { url: 'https://kallis-practice.herokuapp.com', options: {} };\n\n@NgModule({\n  declarations: [MetronomeComponent],\n  imports: [\n    CommonModule,\n    MetronomeRoutingModule,\n    SocketIoModule.forRoot(socketConfig),\n    AudioContextModule.forRoot('balanced'),\n    MatButtonModule,\n    MatIconModule\n  ]\n})\nexport class MetronomeModule { }\n","import { PlayerState } from './player-state-enum'\n \nexport class MetronomePlayer {\n    tempo:number = 120;\n    rate:number = 60000/this.tempo;\n    playInterval:number;\n    firstPlay:boolean = true;\n    state:PlayerState = PlayerState.Paused;\n}\n","export enum PlayerState {\n    Waiting,\n    Playing,\n    Paused\n}","import { Injectable, OnInit } from '@angular/core';\nimport { AudioContext } from 'angular-audio-context';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MetronomeAudioService{\n\n  constructor(private audioContext: AudioContext) {}\n\n  unlocked:boolean = false;\n  isPlaying:boolean = false;\n  startTime:number;              // The start time of the entire sequence.\n  current16thNote:number;        // What note is currently last scheduled?\n  tempo:number = 120.0;          // tempo (in beats per minute)\n  lookahead:number = 25.0;       // How frequently to call scheduling function\n  soundFrequency:number = 880.0;\n  scheduleAheadTime:number = 0.1;// How far ahead to schedule audio (sec) with next interval (in case the timer is late)\n  nextNoteTime:number = 0.0;     // when the next note is due.\n  noteResolution:number = 2;     // 0 == 16th, 1 == 8th, 2 == quarter note\n  noteLength:number = 0.05;      // length of \"beep\" (in seconds)\n  notesInQueue = [];             // the notes that have been put into the web audio, and may or may not have played yet. {note, time}\n  timerWorker:Worker;          \n  notePartition:number = -1;\n\n  updateTempo(tempo:number){\n    this.tempo = 120.0;\n  }\n  \n  nextNote() {\n      // Advance current note and time by a 16th note...\n      let secondsPerBeat:number = 60.0 / this.tempo;    // Notice this picks up the CURRENT\n                                            // tempo value to calculate beat length.\n      this.nextNoteTime += 0.25 * secondsPerBeat;    // Add beat length to last beat time\n\n      this.current16thNote++;    // Advance the beat number, wrap to zero\n      if (this.current16thNote == 16) {\n          this.current16thNote = 0;\n      }\n  }\n\n  toggleResolution(){\n    this.noteResolution = (this.noteResolution+1)%3;\n  }\n\n  incrementPartition(){\n    if(this.current16thNote%4 == 0){\n      this.notePartition = (this.current16thNote)/4;\n    }\n  }\n\n  scheduleNote(beatNumber, time) {\n      // push the note on the queue, even if we're not playing.\n      this.notesInQueue.push( { note: beatNumber, time: time } );\n\n      if ( (this.noteResolution==1) && (beatNumber%2))\n          return; // we're not playing non-8th 16th notes\n      if ( (this.noteResolution==2) && (beatNumber%4))\n          return; // we're not playing non-quarter 8th notes\n\n      // create an oscillator\n      let osc = this.audioContext.createOscillator();\n      osc.connect( this.audioContext.destination );\n      // if (beatNumber % 16 === 0)    // beat 0 == high pitch\n      //     osc.frequency.value = 880.0;\n      if (beatNumber % 4 === 0 )    // quarter notes = medium pitch\n          osc.frequency.value = this.soundFrequency\n      else                        // other 16th notes = low pitch\n          osc.frequency.value = this.soundFrequency/2;\n      osc.start( time );\n      osc.stop( time + this.noteLength );\n      this.incrementPartition();\n  }\n\n  scheduler() {\n      // while there are notes that will need to play before the next interval,\n      // schedule them and advance the pointer.\n      while (this.nextNoteTime < this.audioContext.currentTime + this.scheduleAheadTime ) {\n          this.scheduleNote( this.current16thNote, this.nextNoteTime );\n          this.nextNote();\n      }\n  }\n\n  play() {\n    if (!this.unlocked) {\n      // play silent buffer to unlock the audio\n      let buffer = this.audioContext.createBuffer(1, 1, 22050);\n      let node = this.audioContext.createBufferSource();\n      node.buffer = buffer;\n      node.start(0);\n      this.unlocked = true;\n    }\n\n    this.isPlaying = !this.isPlaying;\n\n    if (this.isPlaying) { // start playing\n        this.current16thNote = 0;\n        this.nextNoteTime = this.audioContext.currentTime;\n        this.timerWorker.postMessage(\"start\");\n        return false;\n    } else {\n        this.timerWorker.postMessage(\"stop\");\n        return true;\n    }\n  }\n\n  init(){\n    // NOTE: THIS RELIES ON THE MONKEYPATCH LIBRARY BEING LOADED FROM\n    // Http://cwilso.github.io/AudioContext-MonkeyPatch/AudioContextMonkeyPatch.js\n    // TO WORK ON CURRENT CHROME!!  But this means our code can be properly\n    // spec-compliant, and work on Chrome, Safari and Firefox.\n    // if we wanted to load audio files, etc., this is where we should do it.\n\n    this.timerWorker = new Worker('./metronome.worker.ts', { type: 'module' });\n    this.timerWorker.onmessage = ({ data }) => {\n      if (data == \"tick\") {\n        this.scheduler();\n      }\n      else{\n        console.log(\"message: \" + data);\n      }\n    };\n    this.timerWorker.postMessage({\"interval\":this.lookahead});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { Observable } from 'rxjs';\nimport { NextBeat } from '../models/next-beat';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TimeSyncService {\n  constructor(private socket:Socket) { }\n\n  // Important setup function to listen for next beat\n  subscribeNextBeat():Observable<NextBeat>{\n    return this.socket.fromEvent('nextBeatSent');\n  }\n\n  subscribeClientCount():Observable<any>{\n    return this.socket.fromEvent('clientCount');\n  }\n\n  requestNextBeat():void{\n    this.socket.emit('requestNextBeat');\n  }\n\n  requestNewTempo(newTempo:number):void{\n    this.socket.emit('requestNewTempo', {tempo:newTempo});\n  }\n\n  syncDevices():void{\n    this.socket.emit('syncDevices');\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\ndeclare var $: any;\nimport * as RecordRTC from 'recordrtc';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'app-tuner',\n  templateUrl: './tuner.component.html',\n  styleUrls: ['./tuner.component.scss']\n})\nexport class TunerComponent {\n  title = 'micRecorder';\n  //Lets declare Record OBJ\n  record;\n  //Will use this flag for toggeling recording\n  recording = false;\n  //URL of Blob\n  blobUrl;\n  error;\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  sanitize(blobUrl: string) {\n    return this.domSanitizer.bypassSecurityTrustUrl(blobUrl);\n  }\n  /**\n  * Start recording.\n  */\n  initiateRecording() {\n    this.recording = true;\n    let mediaConstraints = {\n    video: false,\n    audio: true\n    };\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(this.successCallback.bind(this), this.errorCallback.bind(this));\n  }\n  /**\n  * Will be called automatically.\n  */\n  successCallback(stream) {\n    var options = {\n    mimeType: \"audio/wav\",\n    numberOfAudioChannels: 1,\n    sampleRate: 16000,\n    };\n    //Start Actuall Recording\n    var StereoAudioRecorder = RecordRTC.StereoAudioRecorder;\n    this.record = new StereoAudioRecorder(stream, options);\n    this.record.record();\n  }\n  /**\n  * Stop recording.\n  */\n  stopRecording() {\n  this.recording = false;\n  this.record.stop(this.processRecording.bind(this));\n  }\n  /**\n  * processRecording Do what ever you want with blob\n  * @param  {any} blob Blog\n  */\n  processRecording(blob) {\n    this.blobUrl = URL.createObjectURL(blob);\n    console.log(\"blob\", blob);\n    console.log(\"blobUrl\", this.blobUrl);\n  }\n  /**\n  * Process Error.\n  */\n  errorCallback(error) {\n    this.error = 'Can not play audio in your browser';\n  }\n  ngOnInit() {\n\n  }\n  }","<div >\n  <button (click)=\"initiateRecording()\" class=\"btn btn-primary\" *ngIf=\"!recording\" > Start Recording </button>\n  <button (click)=\"stopRecording()\" class=\"btn btn-danger\" *ngIf=\"recording\"> Stop Recording </button>\n  <audio controls=\"\" *ngIf=\"blobUrl\">\n  <source [src]=\"sanitize(blobUrl)\" type=\"audio/wav\">\n  </audio>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TunerComponent } from './components/tuner.component';\n\nconst routes: Routes = [{ path: '', component: TunerComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TunerRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TunerRoutingModule } from './tuner-routing.module';\nimport { TunerComponent } from './components/tuner.component';\n\n\n@NgModule({\n  declarations: [TunerComponent],\n  imports: [\n    CommonModule,\n    TunerRoutingModule\n  ]\n})\nexport class TunerModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}