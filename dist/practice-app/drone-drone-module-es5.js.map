{"version":3,"sources":["webpack:///src/app/drone/components/drone.component.ts","webpack:///src/app/drone/components/drone.component.html","webpack:///src/app/drone/drone-routing.module.ts","webpack:///src/app/drone/drone.module.ts","webpack:///src/app/drone/services/drone-audio.service.ts"],"names":["DroneComponent","droneAudioService","notes","name","frequency","stopNote","activeNote","note","playNote","multiplier","changeOctave","selector","templateUrl","styleUrls","routes","path","component","DroneRoutingModule","forChild","imports","exports","DroneModule","declarations","DroneAudioService","audioContext","octave","minOctave","maxOctave","lastOsc","stop","freq","lastFreq","osc","createOscillator","connect","destination","value","start","currentTime","Math","max","min","providedIn"],"mappings":"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","file":"drone-drone-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DroneAudioService } from '../services/drone-audio.service'\nimport { MusicalNote } from '../models/musical-notes'\n\n@Component({\n  selector: 'app-drone',\n  templateUrl: './drone.component.html',\n  styleUrls: ['./drone.component.scss']\n})\nexport class DroneComponent implements OnInit {\n\n  constructor(private droneAudioService:DroneAudioService) { }\n  activeNote?:MusicalNote;\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void{\n    this.droneAudioService.stopNote()\n    this.activeNote = null;\n  }\n\n  notes:MusicalNote[] = [\n    {\n      name: 'C',\n      frequency: 261.63\n    }, {\n      name: 'C#',\n      frequency: 277.18\n    }, {\n      name: 'D',\n      frequency: 293.66\n    }, {\n      name: 'D#',\n      frequency: 311.13\n    }, {\n      name: 'E',\n      frequency: 329.63\n    }, {\n      name: 'F',\n      frequency: 349.23\n    }, {\n      name: 'F#',\n      frequency: 369.99\n    }, {\n      name: 'G',\n      frequency: 392\n    }, {\n      name: 'G#',\n      frequency: 415.3\n    }, {\n      name: 'A',\n      frequency: 440\n    }, {\n      name: 'A#',\n      frequency: 466.16\n    }, {\n      name: 'B',\n      frequency: 493.88\n    }\n  ]\n\n  playNote(note){\n    if (note == this.activeNote){\n      this.droneAudioService.stopNote()\n      this.activeNote = null;\n      return\n    }\n    this.activeNote = note;\n    this.droneAudioService.playNote(note.frequency)\n  }\n\n  changeOctave(multiplier:number){\n    this.droneAudioService.changeOctave(multiplier)\n  }\n}","<div class=\"main-container\">\n    <div class=\"note-button-container\">\n        <button *ngFor=\"let note of notes\" class=\"note-button\" (click)=\"playNote(note)\" [ngClass]=\"{'active': note==activeNote}\">{{ note.name }}</button>\n    </div>\n    <div class=\"octave-button-container\">\n        <button class=\"octave-button\" (click)=\"changeOctave(0.5)\">Octave down</button>\n        <button class=\"octave-button\" (click)=\"changeOctave(2)\">Octave up</button>\n    </div>\n    \n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DroneComponent } from './components/drone.component';\n\nconst routes: Routes = [{ path: '', component: DroneComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DroneRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DroneRoutingModule } from './drone-routing.module';\nimport { DroneComponent } from './components/drone.component';\n\n\n@NgModule({\n  declarations: [DroneComponent],\n  imports: [\n    CommonModule,\n    DroneRoutingModule\n  ]\n})\nexport class DroneModule { }\n","import { Injectable } from '@angular/core';\nimport { AudioContext } from 'angular-audio-context';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DroneAudioService {\n\n  constructor(private audioContext: AudioContext) { }\n  lastFreq:number\n  lastOsc:any;\n  octave:number = 1;\n  minOctave:number = 0.5;\n  maxOctave:number = 4;\n\n  stopNote(){\n    // temp vars\n    if (this.lastOsc){\n      this.lastOsc.stop()\n      this.lastOsc = null\n    }\n  }\n\n  playNote(freq:number=this.lastFreq){\n    this.lastFreq = freq;\n    this.stopNote();\n    let osc = this.audioContext.createOscillator();\n    this.lastOsc = osc;\n    osc.connect(this.audioContext.destination);\n    osc.frequency.value = freq*this.octave;\n    osc.start(this.audioContext.currentTime);\n  }\n\n  changeOctave(multiplier:number){\n    this.octave = Math.max(Math.min(this.octave*multiplier, this.maxOctave), this.minOctave)\n    if (this.lastOsc){\n      this.playNote()\n    }\n  }\n\n}\n"]}